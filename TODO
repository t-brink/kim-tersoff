* use assert() macro to check bounds etc and disable for release builds

* can the output of getm_compute() be assumed to be constant or not?

* publish parameters
** parameters can be arrays, so do a 2D array like internally
*** Store in the Tersoff class the Array2Ds for every published
    parameter, managing their own memory
*** on init, read into published parameter memory (published by
    setm_data()) and call a prepare_params method (see last sub-point)
*** on reinit, call a prepare_params method (see last sub-point)
*** prepare_params method: transfer published parameters into internal
    storage, compute derived parameters, publish maximum cutoff
    [public method]

* MI_OPBC_F

* optimize
** parts of force calculation are still done even if not needed
** benchmark when running LAMMPS with MPI, to see if it's still faster
   than the implementation in LAMMPS

* test suite

* README

* comment code better
